package com.uqac.controllers;

import java.net.URL;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.ResourceBundle;

import com.uqac.App;
import com.uqac.dao.ClientDao;
//import com.uqac.dao.UserDao;
import com.uqac.entities.Client;
//import com.uqac.entities.User;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
//import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.MenuItem;
//import javafx.scene.control.PasswordField;
import javafx.scene.control.SelectionMode;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;

public class GestionClientController {
	
	private String view;
	private String titre;
	private static ClientDao dao = new ClientDao();
	private static Client clientSelected =new Client();
	@FXML
	private MenuItem Virement;
	@FXML
	private MenuItem Versement;
	@FXML
	private MenuItem Retrait;
	@FXML
	private MenuItem logout;
	@FXML
	private TableColumn<Client,String> NomC;
	@FXML
	private TableColumn<Client,String> PrenomC;
	@FXML
	private TableColumn<Client,Date> DateNaissanceC;
	@FXML
	private TableColumn<Client,String> AdresseC;
	@FXML
	private TableColumn<Client,String> NumeroTelephoneC;
	@FXML
	private TableView<Client> TableClient;
	@FXML
	private TextField NumeroTelephone;
	@FXML
	private DatePicker DateNaissance;
	@FXML
	private TextField Adresse;
	@FXML
	private TextField Nom;
	@FXML
	private TextField Prenom;
	@FXML
	private Button NouveauClient;
	@FXML
	private Button ModifierClient;
	@FXML
	private Button SupprimerClient;
	@FXML
	private TextField SearchTxt;
	@FXML
	private Button SearchBtn;


	// Event Listener on MenuItem[#listerUser].onAction
	@FXML
	public void Virement(ActionEvent event) {
		// TODO Autogenerated
		App app = new App();
		view="Virement";
		titre="VIREMENT";
		app.changeView(view, titre);
	}
	
	@FXML
	public void Versement(ActionEvent event) {
		// TODO Autogenerated
		App app = new App();
		view="Versement";
		titre="VERSEMENT";
		app.changeView(view, titre);
	}
	
	@FXML
	public void Retrait(ActionEvent event) {
		// TODO Autogenerated
		App app = new App();
		view="Retrait";
		titre="RETRAIT";
		app.changeView(view, titre);
	}
	
	@FXML
	public void logout(ActionEvent event) {
		App app = new App();
		view="Login";
		titre="LOGIN";
		app.changeView(view, titre);
	}
	
	@FXML
	public void NouveauClient(ActionEvent event) {
		// TODO Autogenerated
		Client client = recupererChamp();
		dao.create(client);
		viderChamp();
		etatButtons(true);
		initTable(1,"");
		clientSelected=null;
		
	}
	
	@FXML
	public void ModifierClient(ActionEvent event) {
		// TODO Autogenerated
		Client client = recupererChamp();
		client.setId(clientSelected.getId());
		dao.update(client);
		viderChamp();
		etatButtons(true);
		initTable(1,"");
		clientSelected=null;
	}
	
	@FXML
	public void SupprimerClient(ActionEvent event) {
		// TODO Autogenerated
		Client client = new Client();
		client.setId(clientSelected.getId());
		dao.delete(client);
		viderChamp();
		etatButtons(true);
		initTable(1,"");
		clientSelected=null;
	}
	
	@FXML
	public void SearchBtn(ActionEvent event) {
		// TODO Autogenerated
		String mcl= SearchTxt.getText();
		if(!mcl.isEmpty()) {			
			initTable(2,mcl);
		}else {
			initTable(1,"");
		}
		
	}
	@FXML
	public void init(ActionEvent event) {
		viderChamp();
		clientSelected=null;
		etatButtons(true);
	}
	public void initialize(URL arg0, ResourceBundle arg1) {
		
		initTable(1,"");
		etatButtons(true);
		DateNaissance.setValue(LocalDate.now());
		TableClient.getSelectionModel().selectedItemProperty().addListener(
	            (observable, oldValue, newValue) -> {
	           clientSelected =(Client) TableClient.getSelectionModel().getSelectedItem();
	           Alert info = new Alert(AlertType.INFORMATION);
	           info.setTitle("super");
	           info.setHeaderText("identifiant :"+clientSelected.getId());
	           info.showAndWait();     
	           
	           if(clientSelected!=null) {
	        	   etatButtons(false);
	        	   remplirChamp();
	           }
	           
	            	
	      });
		
		
	}
	
	private void initTable(int typeListe,String mcl) {
		TableClient.getSelectionModel().setSelectionMode(SelectionMode.SINGLE);
		List<Client> clients ;
		ObservableList<Client> liste;
		if(typeListe==1) {
			clients = dao.findAll();
			liste = FXCollections.observableArrayList(clients);
		}else {
			clients = dao.chercher(mcl);
			liste = FXCollections.observableArrayList(clients);
		}
		TableClient.setItems(liste);
		NomC.setCellValueFactory(new PropertyValueFactory<>("Nom"));
		PrenomC.setCellValueFactory(new PropertyValueFactory<>("Prenom"));
		DateNaissanceC.setCellValueFactory(new PropertyValueFactory<>("Date Naissance"));
		AdresseC.setCellValueFactory(new PropertyValueFactory<>("Adresse"));
		NumeroTelephoneC.setCellValueFactory(new PropertyValueFactory<>("Numero Telephone"));
		
	}
	

	private void etatButtons(Boolean b) {
		ModifierClient.setDisable(b);
		SupprimerClient.setDisable(b);
	}
	
	private void remplirChamp() {

		Nom.textProperty().set(clientSelected.getNom());
		Prenom.textProperty().set(clientSelected.getPrenom());
		NumeroTelephone.textProperty().set(clientSelected.getTelephone());
		DateNaissance.setValue(Instant.ofEpochMilli(clientSelected.getDate_naiss().getTime())
			      .atZone(ZoneId.systemDefault())
			      .toLocalDate());
		Adresse.textProperty().set(clientSelected.getAdresse());
		
		
	}
	
	private void viderChamp() {
		Nom.textProperty().set("");
		Prenom.textProperty().set("");
		DateNaissance.setValue(LocalDate.now());
		Adresse.textProperty().set("");
		NumeroTelephone.textProperty().set("");
		
	}
	
	private Client recupererChamp() {
		Client client = new Client();

		client.setNom(Nom.getText());
		client.setPrenom(Prenom.getText());
		client.setDate_naiss(java.sql.Date.valueOf(DateNaissance.getValue()));
		client.setAdresse(Adresse.getText());
		client.setTelephone(NumeroTelephone.getText());
		
		
		return client;
	}

}
